{"🆁🆄🅱🆈 frozen_string_literal":{"prefix":"#f","body":["# frozen_string_literal: true","$0"]},"🆁🆄🅱🆈 #shebang":{"prefix":"#r","body":["#!/usr/bin/env ruby","$0"]},"🆁🆄🅱🆈 rubocop":{"prefix":"#rc","body":"# rubocop: ${1|disable,enable|} $0"},"🆁🆄🅱🆈 .compare_by_identity":{"prefix":".co","body":".compare_by_identity$0"},"🆁🆄🅱🆈 .defined?":{"prefix":".d?","body":".defined?($0)"},"🆁🆄🅱🆈 .delete":{"prefix":".del","body":".delete($0)"},"🆁🆄🅱🆈 .delete_at":{"prefix":".dela","body":".delete_at($0)"},"🆁🆄🅱🆈 .delete_if":{"prefix":".deli","body":".delete_if { $0 }"},"🆁🆄🅱🆈 .delete_if(&)":{"prefix":".deli(","body":".delete_if($0)"},"🆁🆄🅱🆈 .delete_prefix":{"prefix":".delp","body":".delete_prefix($0)"},"🆁🆄🅱🆈 .delete_prefix!":{"prefix":".delp!","body":".delete_prefix!($0)"},"🆁🆄🅱🆈 .delete_suffix":{"prefix":".dels","body":".delete_suffix($0)"},"🆁🆄🅱🆈 .delete_suffix!":{"prefix":".dels!","body":".delete_suffix!($0)"},"🆁🆄🅱🆈 .dig":{"prefix":".di","body":".dig($0)"},"🆁🆄🅱🆈 .each":{"prefix":".ea","body":".each { $0 }"},"🆁🆄🅱🆈 .each(&)":{"prefix":".ea(","body":".each($0)"},"🆁🆄🅱🆈 .each_byte":{"prefix":".eab","body":".each_byte { $0 }"},"🆁🆄🅱🆈 .each_byte(&)":{"prefix":".eab(","body":".each_byte($0)"},"🆁🆄🅱🆈 .each_char":{"prefix":".eac","body":".each_char { $0 }"},"🆁🆄🅱🆈 .each_char(&)":{"prefix":".eac(","body":".each_char($0)"},"🆁🆄🅱🆈 .each_child":{"prefix":".each","body":".each_child { $0 }"},"🆁🆄🅱🆈 .each_child(&)":{"prefix":".each(","body":".each_child($0)"},"🆁🆄🅱🆈 .each_code_point":{"prefix":".eaco","body":".each_code_point { $0 }"},"🆁🆄🅱🆈 .each_code_point(&)":{"prefix":".eaco(","body":".each_code_point($0)"},"🆁🆄🅱🆈 .each_index block":{"prefix":".eai","body":".each_index { |${1:idx}| $0 }"},"🆁🆄🅱🆈 .each_key":{"prefix":".eak","body":".each_key { $0 }"},"🆁🆄🅱🆈 .each_key(&)":{"prefix":".eak(","body":".each_key($0)"},"🆁🆄🅱🆈 .each_line block":{"prefix":".eal","body":".each_line(chomp: true) { |${1:line}| $0 }"},"🆁🆄🅱🆈 .each_pair block":{"prefix":".eap","body":".each_pair { |${1:key}, ${2:value}| $0 }"},"🆁🆄🅱🆈 .each_slice":{"prefix":".eas","body":".each_slice { $0 }"},"🆁🆄🅱🆈 .each_slice(&)":{"prefix":".eas(","body":".each_slice($0)"},"🆁🆄🅱🆈 .each_value":{"prefix":".eav","body":".each_value { $0 }"},"🆁🆄🅱🆈 .each_value(&)":{"prefix":".eav(","body":".each_value($0)"},"🆁🆄🅱🆈 .each_with_index block":{"prefix":".eawi","body":".each_with_index { |${1:item}, ${2:idx}| $0 }"},"🆁🆄🅱🆈 .each_with_object block":{"prefix":".eawo","body":".each_with_object($1) { $0 }"},"🆁🆄🅱🆈 .empty?":{"prefix":".em?","body":".empty?$0"},"🆁🆄🅱🆈 .end_with?":{"prefix":".ew?","body":".end_with?($0)"},"🆁🆄🅱🆈 .find":{"prefix":".fi","body":".find($0)"},"🆁🆄🅱🆈 .find_all":{"prefix":".fia","body":".find_all { $0 }"},"🆁🆄🅱🆈 .find_all(&)":{"prefix":".fia(","body":".find_all($0)"},"🆁🆄🅱🆈 .find_index":{"prefix":".fii","body":".find_index { $0 }"},"🆁🆄🅱🆈 .find_index(&)":{"prefix":".fii(","body":".find_index($0)"},"🆁🆄🅱🆈 .filter_map":{"prefix":".fil","body":".filter_map { $0 }"},"🆁🆄🅱🆈 .filter_map(&)":{"prefix":".fil(","body":".filter_map($0)"},"🆁🆄🅱🆈 .freeze":{"prefix":".fr","body":".freeze$0"},"🆁🆄🅱🆈 .glob":{"prefix":".glob","body":[".glob(\"${1:pattern}\"${2:, sort: true}) do |fname|","\t$0","end"]},"🆁🆄🅱🆈 .group_by":{"prefix":".gro","body":".group_by { $0 }"},"🆁🆄🅱🆈 .group_by(&)":{"prefix":".gro(","body":".group_by($0)"},"🆁🆄🅱🆈 .include?":{"prefix":".in?","body":".include?($0)"},"🆁🆄🅱🆈 .is_a?":{"prefix":".is?","body":".is_a?($0)"},"🆁🆄🅱🆈 .keep_if":{"prefix":".ke","body":".keep_if { $0 }"},"🆁🆄🅱🆈 .keep_if(&)":{"prefix":".ke(","body":".keep_if($0)"},"🆁🆄🅱🆈 .map":{"prefix":".ma","body":".map { $0 }"},"🆁🆄🅱🆈 .map(&)":{"prefix":".ma(","body":".map($0)"},"🆁🆄🅱🆈 .map!":{"prefix":".ma!","body":".map! { $0 }"},"🆁🆄🅱🆈 .map!(&)":{"prefix":".ma!(","body":".map!($0)"},"🆁🆄🅱🆈 .merge":{"prefix":".mer","body":".merge { $0 }"},"🆁🆄🅱🆈 .merge(&)":{"prefix":".mer(","body":".merge($0)"},"🆁🆄🅱🆈 .merge!":{"prefix":".mer!","body":".merge! { $0 }"},"🆁🆄🅱🆈 .merge!(&)":{"prefix":".mer!(","body":".merge!($0)"},"🆁🆄🅱🆈 .nil?":{"prefix":".n?","body":".nil?$0"},"🆁🆄🅱🆈 .negative?":{"prefix":".ne?","body":".negative?$0"},"🆁🆄🅱🆈 .positive?":{"prefix":".po?","body":".positive?$0"},"🆁🆄🅱🆈 .reverse_each":{"prefix":".rea","body":".reverse_each { $0 }"},"🆁🆄🅱🆈 .reverse_each(&)":{"prefix":".rea(","body":".reverse_each($0)"},"🆁🆄🅱🆈 .reverse":{"prefix":".rev","body":".reverse$0"},"🆁🆄🅱🆈 .slice":{"prefix":".sl","body":".slice($0)"},"🆁🆄🅱🆈 .start_with?":{"prefix":".sw?","body":".start_with?($0)"},"🆁🆄🅱🆈 .transform_keys":{"prefix":".trak","body":".transform_keys { $0 }"},"🆁🆄🅱🆈 .transform_keys(&)":{"prefix":".trak(","body":".transform_keys($0)"},"🆁🆄🅱🆈 .transform_keys!":{"prefix":".trak!","body":".transform_keys! { $0 }"},"🆁🆄🅱🆈 .transform_keys!(&)":{"prefix":".trak!(","body":".transform_keys!($0)"},"🆁🆄🅱🆈 .transform_values":{"prefix":".trav","body":".transform_values { $0 }"},"🆁🆄🅱🆈 .transform_values(&)":{"prefix":".trav(","body":".transform_values($0)"},"🆁🆄🅱🆈 .transform_values!":{"prefix":".trav!","body":".transform_values! { $0 }"},"🆁🆄🅱🆈 .transform_values!(&)":{"prefix":".trav!(","body":".transform_values!($0)"},"🆁🆄🅱🆈 .zero?":{"prefix":".z?","body":".zero?$0"},"🆁🆄🅱🆈 EOF":{"prefix":"_e","body":["__END__","$0"]},"🆁🆄🅱🆈 __id__":{"prefix":"_i","body":"__id__$0"},"🆁🆄🅱🆈 __method__":{"prefix":"_m","body":"__method__$0"},"🆁🆄🅱🆈 attr_accessor":{"prefix":"aa","body":"attr_accessor$0"},"🆁🆄🅱🆈 after block ":{"prefix":"aft","body":"after { $0 }"},"🆁🆄🅱🆈 attr_reader":{"prefix":"ar","body":"attr_reader$0"},"🆁🆄🅱🆈 attr_writer":{"prefix":"aw","body":"attr_writer$0"},"🆁🆄🅱🆈 block_given?":{"prefix":"b?","body":"block_given?$0"},"🆁🆄🅱🆈 before block ":{"prefix":"bef","body":"before { $0 }"},"🆁🆄🅱🆈 case block":{"prefix":"cas","body":["case $0","end"]},"🆁🆄🅱🆈 class block":{"prefix":"cla","body":["class $0","end"]},"🆁🆄🅱🆈 self class block":{"prefix":"clas","body":["class << self","\t$0","end"]},"🆁🆄🅱🆈 def block":{"prefix":"def","body":["def $0","end"]},"🆁🆄🅱🆈 def initialize":{"prefix":"defi","body":["def initialize$0","end"]},"🆁🆄🅱🆈 def self":{"prefix":"defs","body":["def self.$0","end"]},"🆁🆄🅱🆈 do block":{"prefix":"do","body":"do { |${1:item}| $0 }"},"🆁🆄🅱🆈 elsif":{"prefix":"eli","body":"elsif$0"},"🆁🆄🅱🆈 else":{"prefix":"els","body":"else$0"},"🆁🆄🅱🆈 ensure block":{"prefix":"ens","body":["ensure","\t$0"]},"🆁🆄🅱🆈 return to_enum":{"prefix":"enum","body":"return to_enum(__method__,$1) $0"},"🆁🆄🅱🆈 extend":{"prefix":"ext","body":"extend$0"},"🆁🆄🅱🆈 if block":{"prefix":"if","body":["if $0","end"]},"🆁🆄🅱🆈 include":{"prefix":"inc","body":"include$0"},"🆁🆄🅱🆈 module block":{"prefix":"mod","body":["module $0","end"]},"🆁🆄🅱🆈 private_constant":{"prefix":"pc","body":"private_constant$0"},"🆁🆄🅱🆈 private_class_method":{"prefix":"pm","body":"private_class_method$0"},"🆁🆄🅱🆈 require":{"prefix":"req","body":"require '$0'"},"🆁🆄🅱🆈 rescue block":{"prefix":"res","body":["rescue ${1:StandardException} => e","\t$0"]},"🆁🆄🅱🆈 require_relative":{"prefix":"rr","body":"require_relative '$0'"},"🆁🆄🅱🆈 unless block":{"prefix":"unl","body":["unless $0","end"]},"🆁🆄🅱🆈 until block":{"prefix":"unt","body":["until $0","end"]},"🆁🆄🅱🆈 when":{"prefix":"whe","body":"when$0"},"🆁🆄🅱🆈 while block":{"prefix":"whi","body":["while $0","end"]}}