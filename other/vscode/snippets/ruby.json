{
  "Ruby: shebang": {
    "prefix": "#r",
    "body": ["#!/usr/bin/env ruby", "$0"]
  },
  "Ruby: frozen_string_literal": {
    "prefix": "#f",
    "body": ["# frozen_string_literal: true", "$0"]
  },
  "Ruby: rubocop": {
    "prefix": "#rc",
    "body": "# rubocop: ${1|disable,enable|} $0"
  },

  "Ruby: end of file": {
    "description": "Ruby: __END__",
    "prefix": "end",
    "body": ["__END__", "$0"]
  },
  "Ruby: do block": {
    "prefix": "do",
    "body": ["do |${1:item}|", "\t$0", "end"]
  },
  "Ruby: #compare_by_identity": {
    "prefix": "comp",
    "body": "compare_by_identity $0"
  },

  "Ruby: attr_reader": { "prefix": "ar", "body": "attr_reader :$0" },
  "Ruby: attr_writer": { "prefix": "aw", "body": "attr_writer :$0" },
  "Ruby: attr_accessor": { "prefix": "aa", "body": "attr_accessor :$0" },

  "Ruby: require": { "prefix": "req", "body": "require '$0'" },
  "Ruby: require_relative": {
    "prefix": "rer",
    "body": "require_relative '$0'"
  },

  "Ruby: each": { "prefix": "ea", "body": "each $0" },
  "Ruby: each_pair": { "prefix": "eap", "body": "each_pair $0" },
  "Ruby: each_index": { "prefix": "eai", "body": "each_index $0" },
  "Ruby: each_key": { "prefix": "eak", "body": "each_key $0" },
  "Ruby: each_value": { "prefix": "eav", "body": "each_value $0" },
  "Ruby: each_line": { "prefix": "eal", "body": "each_line(chomp: true) $0" },
  "Ruby: each_slice": { "prefix": "eas", "body": "each_slice $0" },
  "Ruby: each_with_index": { "prefix": "eawi", "body": "each_with_index $0" },
  "Ruby: each_with_object": { "prefix": "eawo", "body": "each_with_object $0" },
  "Ruby: each_char": { "prefix": "eac", "body": "each_char $0" },
  "Ruby: each_byte": { "prefix": "eab", "body": "each_byte $0" },
  "Ruby: each_code_point": { "prefix": "eaco", "body": "each_code_point $0" },
  "Ruby: each_child": { "prefix": "eaci", "body": "each_child $0" },

  "Ruby: delete_if": { "prefix": "del", "body": "delete_if $0" },
  "Ruby: keep_if": { "prefix": "ke", "body": "keep_if $0" },

  "Ruby: reverse": { "prefix": "rev", "body": "reverse $0" },
  "Ruby: reverse_each": { "prefix": "reva", "body": "reverse_each $0" },

  "Ruby: find": { "prefix": "fi", "body": "find $0" },
  "Ruby: find_all": { "prefix": "fia", "body": "find_all $0" },
  "Ruby: filter_map": { "prefix": "fil", "body": "filter_map $0" },

  "Ruby: glob": {
    "prefix": "glob",
    "body": [
      "glob(\"${1:pattern}\"${2:, sort: true}) do |fname|",
      "\t$0",
      "end"
    ]
  },

  "Ruby: to_enum": {
    "prefix": "to_enum",
    "body": "return to_enum(__method__,$1) $0"
  },

  "Ruby: if block": { "prefix": "if", "body": ["if $0", "end"] },
  "Ruby: else": { "prefix": "els", "body": "else $0" },
  "Ruby: elsif": { "prefix": "eli", "body": "elsif $0" },
  "Ruby: case": { "prefix": "cas", "body": ["case $0", "end"] },
  "Ruby: when": { "prefix": "whe", "body": ["when $0"] },

  "Ruby: def": { "prefix": "def", "body": ["def $0", "end"] },
  "Ruby: def self.": { "prefix": "defs", "body": ["def self.$0", "end"] },
  "Ruby: def initialize.": {
    "prefix": "defi",
    "body": ["def initialize$0", "end"]
  },

  "Ruby: module": { "prefix": "mod", "body": ["module $0", "end"] },
  "Ruby: class": { "prefix": "cla", "body": ["class $0", "end"] },
  "Ruby: self class": {
    "prefix": "scl",
    "body": ["class << self", "\t$0", "end"]
  },

  "Ruby: ensure": { "prefix": "ens", "body": ["ensure", "\t$0"] },
  "Ruby: rescue": {
    "prefix": "res",
    "body": ["rescue ${1:StandardException} => e", "\t$0"]
  },

  "Ruby: private_constant": { "prefix": "pc", "body": "private_constant :$0" },
  "Ruby: private_class_method": {
    "prefix": "pm",
    "body": "private_class_method :$0"
  },
  "Ruby: compare_by_identity": {
    "prefix": "co",
    "body": "compare_by_identity"
  },

  "RSpec: before": { "prefix": "bef", "body": "before { $0 }" },
  "RSpec: after": { "prefix": "aft", "body": "after { $0 }" }
}
