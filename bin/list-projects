#!/usr/bin/env ruby --disable-all
# frozen_string_literal: true

puts(<<~HELP) or exit if ARGV.include?('-h') || ARGV.include?('--help')
  Usage: list-projects [<options>] <name>

  Options:
    -h, --help  show this help
    -t, --top   print first matching project only

  List all projects matching NAME shortcut.
HELP

TOP = ARGV.delete('-t') || ARGV.delete('--top')
ERR = ->(msg) { $stderr.puts("list-projects: #{msg}") or exit(1) }
NORM = ->(str) { str.downcase.tr('-._', '') }
NAME = NORM[ARGV[0] || ERR['argument <name> missing']]
FOUND =
  begin
    map = Hash.new { |h, k| h[k] = [] }
    File.foreach(File.expand_path('~/.list-projects')) do |name|
      name.strip!
      next if name.empty? || name.start_with?('#')
      name = File.expand_path(name)
      next unless File.directory?(name)
      Dir.glob("#{name}/*") do |file_name|
        next unless File.directory?(file_name)
        map[NORM[File.basename(file_name)]] << file_name
      end
    end
    map
      .keys
      .find_all { |key| key.index(NAME) }
      .sort_by! { |key| key.size - NAME.size }
      .map! { |key| map[key] }
      .flatten
      .uniq
  rescue Errno::ENOENT
    ERR['configuration not found - ~/.list-projects']
  end

exit(1) if FOUND.empty?
TOP ? puts(FOUND[0]) : FOUND.each { |f| puts f }
