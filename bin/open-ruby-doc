#!/usr/bin/env ruby --disable-all
# frozen_string_literal: true

if ARGV.empty? || ARGV.include?('--help') || ARGV.include?('-h')
  puts(<<~HELP) or exit
    Usage: open-ruby-doc <name>

    Show Ruby documentation with given class and method <name>.
  HELP
end

class RubyDoc
  def self.find(root, str) = new(root).find(str)

  def initialize(root) = @root = File.expand_path(root)

  def find(str)
    return 'ruby-doc/index.html' if [nil, '', 'main', '/'].include?(str)
    return 'ruby-stdlib/packages.html' if %w[std stdlib].include?(str)
    klazz, method, type = split(str)
    path = find_klass(klazz) or return find_doc(str)
    type ? "#{path}##{type}-#{escape(method)}" : path
  end

  private

  def find_klass(str)
    name = index_name(str)
    return name if file?(name)
    name = stdlib_name(str)
    file?(name) ? name : nil
  end

  def find_doc(str)
    name = doc_name(str)
    file?(name) ? name : nil
  end

  def index_name(str) = "ruby-doc/#{str.split('::').join('/')}.html"

  def stdlib_name(str)
    parts = str.split('::')
    main = parts[0].downcase
    "ruby-stdlib/libdoc/#{main}/rdoc/#{parts.join('/')}.html"
  end

  def doc_name(str) = "ruby-doc/doc/#{str}_rdoc.html"
  def file?(index_name) = File.readable?(File.join(@root, index_name))

  def escape(method_name)
    method_name.gsub(/[\-+|?&\[\]<=>!]/) { |c| "-#{c.ord.to_s(16).upcase}" }
  end

  def split(str)
    klazz, method = str.split('#', 2)
    return klazz, method, 'method-i' if method
    klazz, method = str.split('_', 2)
    return klazz, method, 'method-i' if method
    klazz, method = str.split('.', 2)
    return klazz, method, 'method-c' if method
    str
  end
end

PATH = RubyDoc.find('~/www', ARGV[0])
exec("open -a Safari \"http://mike.local:4040/#{PATH}\"") if PATH
puts("open-ruby-doc: not found - #{ARGV[0]}")
exit(1)
