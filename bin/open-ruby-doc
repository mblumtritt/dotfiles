#!/usr/bin/env ruby --disable-all
# frozen_string_literal: true

if ARGV.empty? || ARGV.include?('--help') || ARGV.include?('-h')
  puts(<<~HELP) or exit
    Usage: open-ruby-doc <name>

    Show Ruby documentation with given class and method <name>.
  HELP
end

class RubyDoc
  def self.find(root, str) = new(root).find(str)

  def initialize(root) = @root = File.expand_path(root)

  def find(str)
    return 'ruby-doc/index.html' if [nil, '', 'main', '/'].include?(str)
    klazz, method, type = split(str)
    path = find_klass(klazz) or return
    type ? "#{path}##{type}-#{escape(method)}" : path
  end

  private

  def find_klass(str)
    parts = str.split('::')
    path = parts.join('/')
    name = "ruby-doc/#{path}.html"
    return name if file?(name)
    %w[exts stdlibs gems].each do |libtype|
      n = "ruby-doc/#{libtype}/#{parts[0].downcase}/#{path}.html"
      return n if file?(n)
    end
    nil
  end

  def file?(str) = File.file?(File.join(@root, str))

  def escape(str)
    str.gsub(/[-+|?&\[\]<=>!]/) { |c| "-#{c.ord.to_s(16).upcase}" }
  end

  def split(str)
    return str.split('#', 2) << 'method-i' if str.include?('#')
    return str.split('_', 2) << 'method-i' if str.include?('_')
    return str.split('.', 2) << 'method-c' if str.include?('.')
    str
  end
end

PATH = RubyDoc.find('~/www', ARGV[0])
exec("open -a Safari \"http://mike.local:4040/#{PATH}\"") if PATH
puts("open-ruby-doc: not found - #{ARGV[0]}")
exit(1)
