#! /usr/bin/env ruby
# frozen_string_literal: true

puts(<<~HELP) or exit if %w[-h --help help].include?(ARGV[0])
  Usage: #{File.basename(Process.argv0)} [options] [expression]

  List USB devices matching given regular expression.

  Options:
    -s, --serial   show serial numbers only
HELP

FIND_ONLY = ARGV.delete('-f') || ARGV.delete('--find')
SERIALS_ONLY = ARGV.delete('-s') || ARGV.delete('--serial')
FILTER =
  begin
    ARGV.empty? ? nil : Regexp.new(ARGV.join(' '))
  rescue RegexpError => e
    $stderr.puts("invalid regular expression - #{e}") or exit(2)
  end
FOUND =
  {}.tap do |found|
    name = nil
    IO
      .popen('system_profiler SPUSBDataType', err: %i[child out], &:read)
      .scan(/\s+(.+):$|Serial Number: (.+)$/) do |match|
        match[0] ? name = match[0] : found[match[1]] = name.tr(' \/|-', '_')
      end
    found.keep_if { |s, n| FILTER.match?(s) || FILTER.match?(n) } if FILTER
  end
exit(FOUND.empty? ? 1 : 0) if FIND_ONLY
if SERIALS_ONLY
  FOUND.each_key { |serial| puts(serial) }
else
  FOUND.each_pair { |serial, name| puts("#{name}: #{serial}") }
end
