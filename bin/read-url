#!/usr/bin/env ruby --disable-all
# frozen_string_literal: true

exit(1) if ARGV.empty?

if ARGV.include?('-h') || ARGV.include?('--help')
  puts <<~USAGE
    usage: #{File.basename(Process.argv0)} webloc...

    Extract URL from given webloc or url files.
  USAGE
  exit
end

module WebLoc
  class << self
    def url(file_name)
      content = content(file_name) or return
      from_xml(content) || from_bin(content)
    end

    private

    def from_xml(content)
      idx = content.index('<plist') or return
      idx = content.index('<dict>', idx + 6) or return
      idx = content.index('<string>http', idx + 6) or return
      edx = content.index('</string>', idx + 13) or return
      idx += 8
      content[idx, edx - idx].strip
    end

    def from_bin(content)
      content.index('bplist') == 0 or return
      idx = content.index('http', 6) or return
      edx = idx + 5
      edx = content.index("\b", edx) || content.index("\0", edx) or return
      content[idx, edx - idx]
    end

    def content(file_name)
      File.binread(file_name)
    rescue SystemCallError
      nil
    end
  end
end

$stdout.sync = true
count = 0

ARGV.each do |arg|
  Dir.glob(File.expand_path(arg)) do |name|
    name = WebLoc.url(name) or next
    puts(name)
    count += 1
  end
end

exit(count.zero? ? 1 : 0)
