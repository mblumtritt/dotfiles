#! /usr/bin/env ruby
# frozen_string_literal: true

require 'mini-cli'
include MiniCLI

help <<~HELP, '[NAME]'
  -s, --stdlib   open standard library for NAME

Opens ruby documentation with given Ruby class or method NAME or the Ruby stdlib documentation for NAME.
HELP

main{ |url| exec(%(open "#{url}")) }

parse_argv do |args|
  name = args['NAME'] or next RubyDocs::BASE_URL
  args.key?('stdlib') ? RubyDocs.stdlib_path(name) : RubyDocs.path(name)
end

module RubyDocs
  BASE_URL = 'http://[::]:8080/ruby'

  class << self
    def stdlib_path(arg)
      return BASE_URL + '-stdlib' unless arg
      return BASE_URL + '-stdlib' if arg.empty?
      BASE_URL + "-stdlib/libdoc/#{arg}/rdoc/index.html"
    end

    def path(arg)
      name, id = parameters_for(arg)
      "#{BASE_URL}/#{name}.html##{id}"
    end

    def parameters_for(arg)
      {
        'method-i' => %w(. #),
        'method-c' => %w(:: :)
      }.each do |method_type, seperators|
        seperators.each do |seperator|
          type, method_name = arg.split(seperator, 2)
          return type, "#{method_type}-#{encoded(method_name)}" if method_name
        end
      end
      return arg, 'method-list-section'
    end

    private

    def encoded(method_name)
      method_name.gsub(%r{\+|\-|\||\?|&|\[|\]|<|=|>|!}) do |c|
        '-' + c.ord.to_s(16).upcase
      end
    end
  end
end
